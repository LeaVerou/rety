:root {
	--main-color-hs: 200 50%;
	--main-color-hsl: var(--main-color-hs) 50%;
	--main-color: hsl(var(--main-color-hsl));
	--gray-hs: 200 20%;
	--gray: var(--gray-hs) 50%;

	--font-body: system-ui, sans-serif;
	--font-mono: Consolas, "Liberation Mono", Menlo, Courier, monospace;
}

body {
	display: flex;
	flex-flow: column;
	min-height: 100vh;
	margin: 0;
	font: 120%/1.5 var(--font-body);
}

a {
	color: hsl(var(--main-color-hs) 40%);
}

	a:where(:visited) {
		color: hsl(310 50% 40%);
	}

pre, code {
	font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
	tab-size: 4;
}

input, select, textarea {
	font: inherit;
}

body > header,
nav,
main,
body > footer {
	padding: 1.5rem clamp(1rem, 50vw - 20rem, 20vw);
}

body > header {
	background: var(--main-color);
	color: white;
	text-align: center;
}

	body > header h1 {
		margin: 0;
		font-size: 500%;
	}

	body > header h1::before {
		content: "";
		display: inline-block;
		vertical-align: middle;
		width: 1em;
		height: 1em;
		margin-right: .1em;
		background: url(logo.svg) center / contain no-repeat;
		transition: .4s;
		filter: drop-shadow(0 0 white);
		--offset: .2em;
		animation: crazy-shadow 10s infinite;
	}

	@media (min-width: 1700px) {
		body > header h1::before {
			display: block;
			width: 2em;
			height: 2em;
			position: absolute;
		}
	}

	@keyframes crazy-shadow {
		20% {
			filter: drop-shadow(var(--offset) var(--offset) white);
			transform: translate(0, 0);
		}

		20.01% {
			filter: invert() drop-shadow(calc(-1 * var(--offset)) calc(-1 * var(--offset)) black);
			transform: translate(var(--offset), var(--offset));
		}

		50% {
			filter: invert() drop-shadow(0 0 black);
			transform: translate(0, 0);
		}

		70% {
			filter: invert() drop-shadow(var(--offset) var(--offset) black);
			transform: translate(0, 0);
		}

		70.01% {
			filter: drop-shadow(calc(-1 * var(--offset)) calc(-1 * var(--offset)) white);
			transform: translate(var(--offset), var(--offset));
		}
	}

	body > header h1:not(:hover)::before {
		animation-play-state: paused;
	}

	body > header h2 {
		margin: 0;
	}

	body > header a {
		color: inherit;
	}

main {
	flex: 1;
}

body > footer {
	background: hsl(var(--gray) / .2);
}

	body > footer a {
		color: inherit;
	}

table {
	border-spacing: 0;
	border-collapse: collapse;
}

th {
	background: hsl(var(--gray) / .1);
}

td, th {
	padding: .3em .5em;
	border: 1px solid rgb(0 0 0 / .2);
}

.demo-container {
	border: 1px solid hsl(var(--gray) / .2);
	box-shadow: 0 1px .3em -.1em rgb(0 0 0 / .2), -.5em -.5em 0  hsl(var(--main-color-hsl) / .1) inset;
	padding: 1em;
	margin: 1em -1em;
	display: grid;
	grid-template-areas: "header"
	                     "code"
	                     "demo";
	grid-gap: 1em;
}

@media (min-width: 600px) {
	.demo-container {
		grid-template-areas: "header header"
		                     "code demo";
		grid-template-columns: 1fr 1fr;
		grid-template-rows: auto auto;
	}
}

	.demo-container header {
		display: flex;
		grid-area: header;
	}

		.demo-container header p {
			margin: 0;
		}

		.demo-container header > form {
			margin-left: auto;
		}

			.demo-container header button {
				white-space: nowrap;
			}

	.demo-code {
		grid-area: code;
	}

	.demo-output {
		grid-area: demo;
	}

nav {
	display: flex;
	padding-top: 0;
	padding-bottom: 0;
	background: hsl(var(--main-color-hs) 65%);
}

	nav > a {
		flex: 1;
		padding: .4em .5em;
		color: white;
		font-weight: bold;
		background: linear-gradient(to right, hsl(var(--main-color-hs) 50%), hsl(var(--main-color-hs) 75%)) no-repeat left / 0 100%;
		transition: .3s;
	}

	nav > a:hover {
		background-size: 100% 100%;
	}

	nav > a:where(:not(:hover)) {
		text-decoration: none;
	}

pre[class] {
	background: hsl(var(--gray) / .1);
}

.log {
	max-height: 50em;
	overflow: auto;
	word-break: break-all;
}

.log-container pre > code:empty::before {
	content: "(No actions yet)";
	opacity: .6;
	font: italic 1rem/1.5 var(--font-body);
}

rety-demo:is(.with-source, .with-preview) .demo-textareas {
	display: grid;
	grid-template-columns: repeat(2, minmax(0, 1fr));
	gap: 1em;
}

rety-demo iframe {
	border: 0;
	width: 100%;
	height: 100%;
}

rety-demo div.prism-live {
	margin-top: .3em;
}

textarea::selection {
	background: var(--main-color);
}

textarea::inactive-selection {
	background: red;
}

md-block header {
	display: none;
}

:is(h1, h2, h3, h4, h5, h6) {
	position: relative;
}

a.anchor {
	position: absolute;
	right: 100%;
	margin-right: .3em;
	text-decoration: none;
	transition: .3s;
}

:is(h1, h2, h3, h4, h5, h6):not(:is(:hover, :focus)) > a.anchor {
	opacity: 0;
}

a.anchor:not(:focus, :hover) {
	color: hsl(var(--gray-hs) 60%);
}

.log-container pre {
	background: white;
	border: hsl(var(--gray) / .3) 1px solid;
}

.log-container .prism-live {
	font-size: .75rem;
	line-height: 1.8;
}

.token.action {
	--color: hsl(var(--color-hs) var(--color-l));
	--color-hs: var(--gray-hs);
	--color-l: 93%;
	--_color: var(--color);
	background: var(--_color);
	padding: .2em 0 .1em;
	box-shadow: 0 0 0 .15em var(--_color);
	border-radius: .1em;
}

.language-actions-json .action-delete {
	--color-hs: 0 80%;
	--color-l: 93%;
}

.language-actions-json .action-pause {
	--color-hs: 200 80%;
	--color-l: 94%;
}

.language-actions-json .action-caret {
	--color-hs: 250 60%;
	--color-l: 95%;
}

.language-actions-json .compact-action {
	--color-hs: 80 80%;
	--color-l: 90%;
}

.language-actions-json > .token .token {
	mix-blend-mode: multiply;
}

.language-actions-json .punctuation {
	mix-blend-mode: multiply;
}

.playing .action:not(.played, .current) {
	--color: hsl(var(--color-hs) calc(var(--color-l) * 1.1));
}

.action.current {
	--color: hsl(var(--color-hs) calc(var(--color-l) * .9));
	outline: 2px solid red;
}

.controls {
	margin-top: 1em;
}

.live-demo {
	--height: 50vh;
}